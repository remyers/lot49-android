/*
 * Copyright 2020, Global Mesh Labs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: "com.google.protobuf"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"
    ndkVersion "21.3.6528147"

    defaultConfig {
        applicationId "org.globalmeshlabs.lot49"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "chain", "custom"
    productFlavors {
        chainregtest {
            dimension "chain"
            applicationIdSuffix ".regtest"
            buildConfigField "String", "CHAIN", '"regtest"'
            manifestPlaceholders = [chain: " Regtest"]
        }
        chaintestnet {
            dimension "chain"
            applicationIdSuffix ".testnet"
            buildConfigField "String", "CHAIN", '"testnet"'
            manifestPlaceholders = [chain: " Testnet"]
        }
        chainmainnet {
            dimension "chain"
            buildConfigField "String", "CHAIN", '"mainnet"'
            manifestPlaceholders = [chain: ""]
        }

        normal {
            dimension "custom"
            manifestPlaceholders = [custom: ""]
        }
        experiment1 {
            applicationIdSuffix ".experiment1"
            dimension "custom"
            manifestPlaceholders = [custom: " Experiment 1"]
        }
        fakelnd {
            applicationIdSuffix ".fakelnd"
            dimension "custom"
            manifestPlaceholders  = [custom: " Fake lnd"]
        }
    }

    // Enables data binding.
    buildFeatures {
        dataBinding = true
    }

// To inline the bytecode built with JVM target 1.8 into
// bytecode that is being built with JVM target 1.6. (e.g. navArgs)

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$version_kotlin"

    // Support libraries
    implementation "androidx.appcompat:appcompat:$version_appcompat"
    implementation "androidx.fragment:fragment:${version_fragment}"
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"

    // Android KTX
    implementation "androidx.core:core-ktx:$version_core"

    // Room dependencies
    implementation "androidx.room:room-runtime:$version_room"
    kapt "androidx.room:room-compiler:$version_room"

    // Lifecycle dependencies
    //implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_lifecycle"
    //kapt "androidx.lifecycle:lifecycle-compiler:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle"
    //implementation "androidx.activity:fragment-ktx:1.1.0"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutine"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation"

    // Material widgets
    implementation "com.google.android.material:material:$version_material"

    // Testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Rust library
    implementation project(':rust-android-lib')

    // LND from Blixt Wallet
    implementation group: 'com.google.guava', name: 'guava', version: '27.0.1-android'
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "com.jakewharton:process-phoenix:2.0.0"

    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'io.grpc:grpc-stub:1.20.0'
    implementation 'io.grpc:grpc-protobuf-lite:1.20.0'

    implementation "com.hypertrack:hyperlog:0.0.10"

    implementation "com.github.mmin18:realtimeblurview:1.2.1"

    implementation project(":lndmobile")
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'

        }
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.20.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                javalite { }
                grpc {
                    // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}